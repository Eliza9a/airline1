/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.airline1;

import java.sql.*;
import java.time.LocalDateTime;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.DocFlavor;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author airin
 */
public class BlankStock extends javax.swing.JFrame {

    PreparedStatement preparedSt = null;
    Connection connection = null;
    ResultSet resultSet = null;
    LocalDateTime localDateTime;
    private DefaultTableModel tableModel;
    private int selectedRow;

    /**
     * Creates new form BlankStock
     */
    public BlankStock() {
        initComponents();
        initStaff("select * from login");
        initBlankStockTable();
        initBlankStock("select * from BlankStock");
        selectedRow = -1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        bgR = new javax.swing.JPanel();
        bgL = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        updateButtonS = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        blTypeField = new javax.swing.JComboBox<>();
        searchButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        deleteButton1 = new javax.swing.JButton();
        staffSelector = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        addButtonS = new javax.swing.JButton();
        deleteButtonS = new javax.swing.JButton();
        updateButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        title = new javax.swing.JLabel();
        title1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Blank ID", "Blank Status", "Advisor ID", "Date"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bgR.setBackground(new java.awt.Color(204, 255, 255));

        bgL.setBackground(new java.awt.Color(112, 203, 203));

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei", 1, 24)); // NOI18N
        jLabel1.setText("Agent Details");

        updateButtonS.setBackground(new java.awt.Color(112, 203, 203));
        updateButtonS.setFont(new java.awt.Font("Microsoft YaHei", 0, 18)); // NOI18N
        updateButtonS.setText("Update");
        updateButtonS.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 204, 204), new java.awt.Color(204, 255, 255), new java.awt.Color(0, 102, 102), new java.awt.Color(0, 153, 153)));
        updateButtonS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonSActionPerformed(evt);
            }
        });

        backButton.setBackground(new java.awt.Color(112, 203, 203));
        backButton.setFont(new java.awt.Font("Microsoft YaHei", 0, 18)); // NOI18N
        backButton.setText("Back");
        backButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 204, 204), new java.awt.Color(204, 255, 255), new java.awt.Color(0, 102, 102), new java.awt.Color(0, 153, 153)));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        blTypeField.setBackground(new java.awt.Color(204, 255, 255));
        blTypeField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select type", "All" ,"444", "440", "420", "201", "101", "451", "452" }));
        blTypeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blTypeFieldActionPerformed(evt);
            }
        });

        searchButton.setBackground(new java.awt.Color(112, 203, 203));
        searchButton.setFont(new java.awt.Font("Microsoft YaHei", 0, 18)); // NOI18N
        searchButton.setIcon(new javax.swing.ImageIcon("src/main/java/search.png")); // NOI18N
        searchButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 204, 204), new java.awt.Color(204, 255, 255), new java.awt.Color(0, 102, 102), new java.awt.Color(0, 153, 153)));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        addButton.setBackground(new java.awt.Color(112, 203, 203));
        addButton.setFont(new java.awt.Font("Microsoft YaHei", 0, 18)); // NOI18N
        addButton.setText("Add");
        addButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 204, 204), new java.awt.Color(204, 255, 255), new java.awt.Color(0, 102, 102), new java.awt.Color(0, 153, 153)));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon("src/main/java/search.png")); // NOI18N

        deleteButton1.setBackground(new java.awt.Color(112, 203, 203));
        deleteButton1.setFont(new java.awt.Font("Microsoft YaHei", 0, 18)); // NOI18N
        deleteButton1.setText("Delete");
        deleteButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 204, 204), new java.awt.Color(204, 255, 255), new java.awt.Color(0, 102, 102), new java.awt.Color(0, 153, 153)));
        deleteButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton1ActionPerformed(evt);
            }
        });

        staffSelector.setBackground(new java.awt.Color(204, 255, 255));
        staffSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select type", "All" ,"Administrator", "Travel Advisor", "Manager"}));
        staffSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffSelectorActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon("src/main/java/search.png")); // NOI18N

        addButtonS.setBackground(new java.awt.Color(112, 203, 203));
        addButtonS.setFont(new java.awt.Font("Microsoft YaHei", 0, 18)); // NOI18N
        addButtonS.setText("Add");
        addButtonS.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 204, 204), new java.awt.Color(204, 255, 255), new java.awt.Color(0, 102, 102), new java.awt.Color(0, 153, 153)));
        addButtonS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonSActionPerformed(evt);
            }
        });

        deleteButtonS.setBackground(new java.awt.Color(112, 203, 203));
        deleteButtonS.setFont(new java.awt.Font("Microsoft YaHei", 0, 18)); // NOI18N
        deleteButtonS.setText("Delete");
        deleteButtonS.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 204, 204), new java.awt.Color(204, 255, 255), new java.awt.Color(0, 102, 102), new java.awt.Color(0, 153, 153)));
        deleteButtonS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonSActionPerformed(evt);
            }
        });

        updateButton1.setBackground(new java.awt.Color(112, 203, 203));
        updateButton1.setFont(new java.awt.Font("Microsoft YaHei", 0, 18)); // NOI18N
        updateButton1.setText("Update");
        updateButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 204, 204), new java.awt.Color(204, 255, 255), new java.awt.Color(0, 102, 102), new java.awt.Color(0, 153, 153)));
        updateButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bgLLayout = new javax.swing.GroupLayout(bgL);
        bgL.setLayout(bgLLayout);
        bgLLayout.setHorizontalGroup(
            bgLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(bgLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bgLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(bgLLayout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addComponent(blTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(239, 239, 239)
                            .addComponent(jLabel1))
                        .addComponent(updateButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(bgLLayout.createSequentialGroup()
                            .addComponent(staffSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(deleteButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addButtonS, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(deleteButtonS, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updateButtonS, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bgLLayout.createSequentialGroup()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(403, 403, 403)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(bgLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(bgLLayout.createSequentialGroup()
                    .addGap(274, 274, 274)
                    .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(275, Short.MAX_VALUE)))
        );
        bgLLayout.setVerticalGroup(
            bgLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLLayout.createSequentialGroup()
                .addGroup(bgLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel1))
                    .addGroup(bgLLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(bgLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(blTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(updateButton1)
                        .addGap(77, 77, 77)
                        .addGroup(bgLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(staffSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(addButtonS)
                .addGap(12, 12, 12)
                .addComponent(deleteButtonS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateButtonS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backButton)
                .addContainerGap())
            .addGroup(bgLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(bgLLayout.createSequentialGroup()
                    .addGap(247, 247, 247)
                    .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(248, 248, 248)))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Blank ID", "Blank Status", "Advisor ID", "Date"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        title.setFont(new java.awt.Font("Microsoft YaHei", 1, 24)); // NOI18N
        title.setText("Staff ");

        title1.setFont(new java.awt.Font("Microsoft YaHei", 1, 24)); // NOI18N
        title1.setText("Blank Stock");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Username", "Password", "UserType", "Email", "ContactNumber", "Address"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout bgRLayout = new javax.swing.GroupLayout(bgR);
        bgR.setLayout(bgRLayout);
        bgRLayout.setHorizontalGroup(
            bgRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgRLayout.createSequentialGroup()
                .addComponent(bgL, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(bgRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgRLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 338, Short.MAX_VALUE)
                        .addGroup(bgRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgRLayout.createSequentialGroup()
                                .addComponent(title)
                                .addGap(355, 355, 355))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgRLayout.createSequentialGroup()
                                .addComponent(title1)
                                .addGap(315, 315, 315))))
                    .addGroup(bgRLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(bgRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 662, Short.MAX_VALUE)
                            .addComponent(jScrollPane3))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        bgRLayout.setVerticalGroup(
            bgRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgRLayout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(title1)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void initBlankStock(String sqlStatement){
        try (Connection connection = DbConnection.getConnection()){
            PreparedStatement preparedStatement = connection.prepareStatement(sqlStatement);
            ResultSet resultSet = preparedStatement.executeQuery();
            ResultSetMetaData resultSetMetaData = resultSet.getMetaData();
            int column = resultSetMetaData.getColumnCount();
            tableModel = (DefaultTableModel) jTable1.getModel();
            tableModel.setRowCount(0);

            while(resultSet.next()){
                Vector v = new Vector();

                for(int i=1; i<=column; i++){
                    v.add(resultSet.getString("BlankID"));
                    v.add(resultSet.getString("BlankSold"));
                    v.add(resultSet.getString("StaffID"));
                    v.add(resultSet.getString("DateReceived"));
                    //   v.add(resultSet.getString(""));

                }
                tableModel.addRow(v);
            }
        } catch (SQLException | ClassNotFoundException e){
            Logger.getLogger(CustomerInfo.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void updateButtonSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonSActionPerformed

        try(Connection connection = DbConnection.getConnection()) {
            PreparedStatement preparedStatement = null;

            preparedStatement = connection.prepareStatement("update login set Username = '"
                    + tableModel.getValueAt(selectedRow, 1)
                    + "', Password= '"
                    + tableModel.getValueAt(selectedRow, 2)
                    + "', Username= '"
                    + tableModel.getValueAt(selectedRow, 3)
                    + "', Email= '"
                    + tableModel.getValueAt(selectedRow, 4)
                    + "', ContactNumber= '"
                    + tableModel.getValueAt(selectedRow, 5)
                    + "', Address= '"
                    + tableModel.getValueAt(selectedRow, 6)
                    + "' where ID = '"
                    + tableModel.getValueAt(selectedRow, 0) + "'"
            );

            preparedStatement.execute();
            initBlankStock("select * from login'");

        } catch (SQLException | ClassNotFoundException e){
            JOptionPane.showMessageDialog(null, "Error");
        }

    }//GEN-LAST:event_updateButtonSActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        dispose();
        SystemAdminMenu systemAdminMenu = new SystemAdminMenu();
        systemAdminMenu.setVisible(true);
        systemAdminMenu.setDefaultCloseOperation(Login.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_backButtonActionPerformed

    private void blTypeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blTypeFieldActionPerformed

        try (Connection connection = DbConnection.getConnection()) {
            String s = blTypeField.getSelectedItem().toString();


            if( s == "All"){
                initBlankStock("select * from BlankStock where BlankID ");
            }
            if (s == "444") {
                initBlankStock("select * from BlankStock where BlankID " + " LIKE '444%'");
            }
            if (s == "440") {
                initBlankStock("select * from BlankStock where BlankID " + " LIKE '440%'");
            }
            if (s == "420") {
                initBlankStock("select * from BlankStock where BlankID " + " LIKE '420%'");
             }
            if( s == "201") {
                initBlankStock("select * from BlankStock where BlankID " + " LIKE '201%'");
            }
            if( s == "101") {
                initBlankStock("select * from BlankStock where BlankID " + " LIKE '101%'");
            }
            if( s == "451") {
                initBlankStock("select * from BlankStock where BlankID " + " LIKE '451%'");
            }
            if( s == "452") {
                initBlankStock("select * from BlankStock where BlankID " + " LIKE '452%'");
            }

        } catch(SQLException | ClassNotFoundException e){
            JOptionPane.showMessageDialog(null, e);
        }

    }//GEN-LAST:event_blTypeFieldActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
  }//GEN-LAST:event_searchButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        BlankADD blankADD = new BlankADD();
        blankADD.setVisible(true);
        dispose();
    }//GEN-LAST:event_addButtonActionPerformed

    private void deleteButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton1ActionPerformed

        try ( Connection connection = DbConnection.getConnection()){
            selectedRow = jTable1.getSelectedRow();
            if(selectedRow >= 0){
                PreparedStatement preparedStatement = connection.prepareStatement("delete from BlankStock where BlankID =' " + tableModel.getValueAt(selectedRow,0)+ "'");
                preparedStatement.execute();
                initBlankStockTable();
            }
            else {
                JOptionPane.showMessageDialog(null, "Please select a row!");
            }
        } catch (ClassNotFoundException|SQLException e){
            Logger.getLogger(BlankStock.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_deleteButton1ActionPerformed

    private void staffSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffSelectorActionPerformed
        try (Connection connection = DbConnection.getConnection()) {
            String s = staffSelector.getSelectedItem().toString();


            if( s == "All"){
                initStaff("select * from login");
            }
            if (s == "Administrator") {
                initStaff("select * from login where UserType " + " LIKE 'Administrator'");
            }
            if (s == "Travel Advisor") {
                initStaff("select * from login where UserType " + " LIKE 'Travel Advisor'");
            }
            if (s == "Manager") {
                initStaff("select * from login where UserType " + " LIKE 'Manager'");
            }


        } catch(SQLException | ClassNotFoundException e){
            JOptionPane.showMessageDialog(null, e);
        }    }//GEN-LAST:event_staffSelectorActionPerformed

    private void initStaff(String sqlStatement2) {

        try (Connection connection = DbConnection.getConnection();){

            PreparedStatement preparedStatement1 = connection.prepareStatement(sqlStatement2);
            ResultSet resultSet = preparedStatement1.executeQuery();
            ResultSetMetaData resultSetMetaData = resultSet.getMetaData();
            int column = resultSetMetaData.getColumnCount();
            tableModel = (DefaultTableModel) jTable3.getModel();
            tableModel.setRowCount(0);

            while(resultSet.next()){
                Object[] v = new Object[7];

                for(int i=1; i<=column; i++){
                    v[0]=(resultSet.getString("ID"));
                    v[1]=(resultSet.getString("Username"));
                    v[2]=(resultSet.getString("Password"));
                    v[3]=(resultSet.getString("UserType"));
                    v[4]=(resultSet.getString("Email"));
                    v[5]=(resultSet.getString("ContactNumber"));
                    v[6]=(resultSet.getString("Address"));

                }
                tableModel.addRow(v);
            }
        } catch (SQLException | ClassNotFoundException e){
            Logger.getLogger(CustomerInfo.class.getName()).log(Level.SEVERE, null, e);
        }

    }

    private void addButtonSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonSActionPerformed
        StaffADD staffADD = new StaffADD();
        staffADD.setVisible(true);
        dispose();
    }//GEN-LAST:event_addButtonSActionPerformed

    private void deleteButtonSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonSActionPerformed
        try ( Connection connection = DbConnection.getConnection()){
            selectedRow = jTable3.getSelectedRow();
            if(selectedRow >= 0){
                PreparedStatement preparedStatement = connection.prepareStatement("delete from login where ID =' " + tableModel.getValueAt(selectedRow,0)+ "'");
                preparedStatement.execute();
                initBlankStockTable();
            }
            else {
                JOptionPane.showMessageDialog(null, "Please select a row!");
            }
        } catch (ClassNotFoundException|SQLException e){
            Logger.getLogger(BlankStock.class.getName()).log(Level.SEVERE, null, e);
        }

    }//GEN-LAST:event_deleteButtonSActionPerformed

    private void updateButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButton1ActionPerformed
        try ( Connection connection = DbConnection.getConnection()){
            PreparedStatement preparedStatement = null;

            preparedStatement = connection.prepareStatement("update BlankStock set BlankSold = '"
                    + tableModel.getValueAt(selectedRow, 1)
                    + "', StaffID = '"
                    + tableModel.getValueAt(selectedRow, 2)
                    + "', DateReceived = '"
                    + tableModel.getValueAt(selectedRow,3)
                    + "'where BlankID = '"
                    + tableModel.getValueAt(selectedRow, 0)
                    + "'");

            preparedStatement.execute();
            initBlankStock("select * from BlankStock");
        } catch ( ClassNotFoundException | SQLException e) {
            Logger.getLogger(CustomerInfo.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_updateButton1ActionPerformed

    private void initBlankStockTable() {
        try (Connection connection = DbConnection.getConnection()){
            PreparedStatement preparedStatement = connection.prepareStatement("select * from BlankStock");
            ResultSet resultSet = preparedStatement.executeQuery();
            ResultSetMetaData resultSetMetaData = resultSet.getMetaData();
            int column = resultSetMetaData.getColumnCount();
            tableModel = (DefaultTableModel) jTable1.getModel();
            tableModel.setRowCount(0);

            while(resultSet.next()){
                Object[] o = new Object[4];

                for(int i=1; i<=column; i++){
                    o[0] = resultSet.getString("BlankID");
                    o[1] = resultSet.getString("BlankSold");
                    o[2] = resultSet.getString("StaffID");
                    o[3] = resultSet.getString("DateReceived");
                    //   v.add(resultSet.getString(""));

                }
                tableModel.addRow(o);
            }
        } catch ( ClassNotFoundException | SQLException  e){
            Logger.getLogger(CustomerInfo.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BlankStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BlankStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BlankStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BlankStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BlankStock().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton addButtonS;
    private javax.swing.JButton backButton;
    private javax.swing.JPanel bgL;
    private javax.swing.JPanel bgR;
    private javax.swing.JComboBox<String> blTypeField;
    private javax.swing.JButton deleteButton1;
    private javax.swing.JButton deleteButtonS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox<String> staffSelector;
    private javax.swing.JLabel title;
    private javax.swing.JLabel title1;
    private javax.swing.JButton updateButton1;
    private javax.swing.JButton updateButtonS;
    // End of variables declaration//GEN-END:variables
}
